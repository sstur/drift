(function() {
  "use strict";
  var qs = require('./qs')
    , http = require('http')
    , req = http.IncomingMessage.prototype
    , parseUrl = require('url').parse;

  //Patch ServerRequest to save unmodified copy of headers
  var _addHeaderLine = req._addHeaderLine;
  req._addHeaderLine = function(field, value) {
    var list = this.complete ?
        (this.allTrailers || (this.allTrailers = {})) :
        (this.allHeaders || (this.allHeaders = {}));
    if (field in list) {
      list[field].push(value);
    } else {
      list[field] = [value];
    }
    _addHeaderLine.call(this, field, value);
  };

  function Request(httpReq) {
    this._super = httpReq;
  }

  Request.prototype = {
    getMethod: function() {
      return this._super.method;
    },
    getURL: function() {
      return this._super.url;
    },
    getURLParts: function() {
      if (!this._parsed) {
        var parts = parseUrl(this._super.url);
        this._parsed = {path: qs.unescape(parts.pathname), qs: parts.search || ''};
      }
      return this._parsed;
    },
    getHeaders: function() {
      //var allHeaders = this._super.allHeaders || {};
      //var headers = parseHeaders(allHeaders);
      return this._super.headers;
    },
    getCookies: function() {
    },
    getPostData: function() {
    }
  };

  module.exports = Request;
})();