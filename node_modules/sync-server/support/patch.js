var http = require('http')
  , req = http.IncomingMessage.prototype
  , res = http.ServerResponse.prototype;

//Patch ServerRequest to save unmodified copy of headers
var _addHeaderLine = req._addHeaderLine;
req._addHeaderLine = function(field, value) {
  var list = this.complete ?
      (this.allTrailers || (this.allTrailers = {})) :
      (this.allHeaders || (this.allHeaders = {}));
  if (field in list) {
    list[field].push(value);
  } else {
    list[field] = [value];
  }
  _addHeaderLine.call(this, field, value);
};

//Provide a public "header sent" flag until node does.
res.__defineGetter__('headerSent', function(){
  return this._header;
});

//Proxy to emit "header" event.
var _renderHeaders = res._renderHeaders;
res._renderHeaders = function() {
  if (!this._emittedHeader) this.emit('header');
  this._emittedHeader = true;
  return _renderHeaders.call(this);
};

var writeHead = res.writeHead;
res.writeHead = function() {
  if (!this._emittedHeader) this.emit('header');
  this._emittedHeader = true;
  return writeHead.apply(this, arguments);
};
