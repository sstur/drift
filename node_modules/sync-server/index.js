/*global Fiber, yeild */
(function() {
  "use strict";
  var fs = require('fs');
  var path = require('path')
    , join = path.join
    , basename = path.basename;
  var Fiber = require('fibers');
  var Request = require('./lib/request');
  var Response = require('./lib/response');

  //helpers for app and framework
  var appPath = join(__dirname, '../../app');
  var loadPath = function(dir) {
    var path = join(appPath, dir);
    var files = fs.readdirSync(path);
    files.forEach(function(file) {
      if (file.match(/\.js$/i) && file.charAt(0) != '_') {
        require(join(path, basename(file)));
      }
    });
  };

  //load framework files
  loadPath('system');

  //we now have `app` and `define`

  var handler = function(params) {
    var req = new Request(params.req)
      , res = new Response(params.res);
    sleep(2000);
    console.log(req.getURLParts());
    console.log(req.getHeaders());
    res.status('200 Found');
    res.write('Hello World');
    res.end();
  };

  var sleep = function(ms) {
  	var fiber = Fiber.current;
  	setTimeout(function() {
  		fiber.run();
  	}, ms);
    Fiber.yield();
  };

  exports.requestHandler = function (req, res) {
    Fiber(handler).run({req: req, res: res});
  };

})();