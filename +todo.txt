
specify assets directory, devhost, site rewrites in app-conf.json
db-conf.json -> app-conf.json (sendfleet)
allow build-conf to be named app-conf (for cases where we use node for db-init, but iis for deployment)
move db-init/compile-views/devtools (sendfleet, wfm, cfm)
util.log should be async in node-adapter
getEnv() should be guaranteed in all adapters
replace isDev, getEnv with __DEV__ ?

allow config/mysql/connections to be specified in build-conf or app-conf

are the test libraries (system/test) going into every build?
app/system
  move core modules -> core/
  libraries like session, auth, mysql, localdb -> lib/
  include optional libraries only if require'd in system/core or app/

_examples/ is required bu tools/init.js

file-based session store:
  5324e71223dc1548ecaea108.json (first 8 is seconds in hex) [cfm]
  2012-10-19/13a76ac2bcc019dce0e054b26485d8f9.json

adapters/activex/mysql: deprecate connection string
Ignore or throw? modelInstance.update({some_non_exist: 'foo'})

app.route('/users/:id[int:positive]')
 - or -
app.route('/users/:id=int[0,]')
 - or -
custom defined param filters:
  {int: /^\d+$/, hex: /^[0-9A-Za-z]+$/}


//implement OR
model.findAll([{name: 'Alice'}, {name: 'Bob}], {orderBy: 'name'})

Allow access to unaltered qs/form-body as array (emit 'field'?)

Content-Disposition: attachment; filename="sanitized-file"; filename*=UTF-8''unicode%20file
//see: http://greenbytes.de/tech/tc2231/#attfnboth

remove app.cfg('virtual_url')
specify original_url_header in app.cfg

when req.autoSavePath is specified, cleanup files at req.end except those on which file.saveAs() was called

method-override and x-forwarded-for allowed for specific ip
[private-header array?]

if req.method == 'get' and req.query('_method') [method override]
if [method override] and req.query('_body') [parse body]

req._super._read(bytes) no greater than 256kb at a time
Uploads during which client disconnects should emit a 'cancel' event and handle gracefully

app.on('init') used for:
  patching app (app.model)
  patching modules (util.customFn = fn)
  asp/v8cgi adapters

Consistency:
  Revisit http-client

SMTP SSL
apache app.data
allow parseReqBody to handle custom format like XML (adapterRequest.readRawBody()?)
Support uploads with Transfer-Encoding: chunked
 (If request includes Content-Length or Transfer-Encoding, then it must contain Content-Type field)

consolidate:
  parseCookies, parseHeaders, parseUrl (http client)

implement:
  util.joinPath

Node:
  remove http patches and replace static-server module
  replace formidable with dicer
    busboy is based on dicer
    multipart is fork of formidable (adding streams2 support)
  Verify file r/w is fiber-safe
